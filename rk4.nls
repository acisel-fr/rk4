;===============================================================================
; RK4: Runge-Kutta 4th Order Method for the simulation software NetLogo.
; Copyright (C) 2013 Pierre-Olivier Chasset
; http://flow.chasset.net/netlogo-rk4/
;
; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU Affero General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU Affero General Public License for more details.
;
; You should have received a copy of the GNU Affero General Public License
; along with this program. If not, see <http://www.gnu.org/licenses/>.
;===============================================================================

to-report rk4 [ tn state-n h ]
  let k1 map [ h * ? ] df tn state-n
  let k2 map [ h * ? ] df (tn + 0.5 * h) (add2 state-n map [ 0.5 * ? ] k1)
  let k3 map [ h * ? ] df (tn + 0.5 * h) (add2 state-n map [ 0.5 * ? ] k2)
  let k4 map [ h * ? ] df (tn +       h) (add2 state-n                 k3)
  let fn+1 add2 state-n map [ ? / 6 ] add4 k1 map [ 2 * ? ] k2 map [ 2 * ? ] k3 k4
  report fn+1
end

to-report add2 [ v1 v2 ]
  let v [ ]
  let i 0
  while [ i < length v1 ] [
    set v lput (item i v1 + item i v2) v
    set i i + 1
  ]
  report v
end

to-report add4 [ v1 v2 v3 v4 ]
  let v [ ]
  let i 0
  while [ i < length v1 ] [
    set v lput (item i v1 + item i v2 + item i v3 + item i v4) v
    set i i + 1
  ]
  report v
end
